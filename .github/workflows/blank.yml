import sys
import matplotlib
matplotlib.use('Agg')

import matplotlib.pyplot as plt

def ModelResults(xTrain, yTrain, xTest, yTest, stdType, path):
    # Principal Component Analysis
    pcaTrain = PCA(n_components=15)
    pcaTrain.fit(xTrain)

    xTrain = pcaTrain.transform(xTrain)
    xTest = pcaTrain.transform(xTest)

    # Start Modeling
    allResults = []
    modelNames = [
        "Neural Network", "Random Forest", "Decision Tree", "Naive Bayes",
        "K-Nearest Neighbor"
    ]

    models = [
        MLPClassifier(random_state=42, hidden_layer_sizes=(50, 20, 5,)),
        RandomForestClassifier(random_state=42, n_estimators=50),
        DecisionTreeClassifier(random_state=42),
        GaussianNB(),
        KNeighborsClassifier(n_neighbors=2)
    ]

    # Iterate through models
    for name, clf in zip(modelNames, models):
        print(f'Tailoring {name} for {stdType} Standard')
        start = time()
        clf.fit(xTrain, yTrain)
        end = time()
        elapsed = round(end - start, 6)
        yPred = clf.predict(xTest)

        # Results
        fullName = f'{stdType}-{name}'
        CreateCM(yTest, yPred, fullName, path, clf)
        rr = ResultsReturn(yTest, yPred, fullName, clf, elapsed)
        allResults.append(rr)

    # Export all Visualizations
    fullName = f'{stdType}'
    ExportCSV(allResults, fullName, path)
    GenerateCharts(allResults, fullName, path)
